{
"statements":
	[
	{
	  "name": "SHOW VARIABLE AUTOCOMMIT",
	  "executorName": "ClientSideStatementNoParamExecutor",
	  "resultType": "RESULT_SET",
	  "regex": "(?is)\\A\\s*show\\s+variable\\s+autocommit\\s*\\z",
	  "method": "statementShowAutocommit",
	  "exampleStatements": ["show variable autocommit"]
	},
	{
	  "name": "SHOW VARIABLE READONLY",
	  "executorName": "ClientSideStatementNoParamExecutor",
	  "resultType": "RESULT_SET",
	  "regex": "(?is)\\A\\s*show\\s+variable\\s+readonly\\s*\\z",
	  "method": "statementShowReadOnly",
	  "exampleStatements": ["show variable readonly"]
	},
	{
	  "name": "SHOW VARIABLE RETRY_ABORTS_INTERNALLY",
	  "executorName": "ClientSideStatementNoParamExecutor",
	  "resultType": "RESULT_SET",
	  "regex": "(?is)\\A\\s*show\\s+variable\\s+retry_aborts_internally\\s*\\z",
	  "method": "statementShowRetryAbortsInternally",
	  "exampleStatements": ["show variable retry_aborts_internally"],
	  "examplePrerequisiteStatements": ["set readonly=false", "set autocommit=false"]
	},
	{
	  "name": "SHOW VARIABLE AUTOCOMMIT_DML_MODE",
	  "executorName": "ClientSideStatementNoParamExecutor",
	  "resultType": "RESULT_SET",
	  "regex": "(?is)\\A\\s*show\\s+variable\\s+autocommit_dml_mode\\s*\\z",
	  "method": "statementShowAutocommitDmlMode",
	  "exampleStatements": ["show variable autocommit_dml_mode"]
	},
	{
	  "name": "SHOW VARIABLE STATEMENT_TIMEOUT",
	  "executorName": "ClientSideStatementNoParamExecutor",
	  "resultType": "RESULT_SET",
	  "regex": "(?is)\\A\\s*show\\s+variable\\s+statement_timeout\\s*\\z",
	  "method": "statementShowStatementTimeout",
	  "exampleStatements": ["show variable statement_timeout"]
	},
	{
	  "name": "SHOW VARIABLE READ_TIMESTAMP",
	  "executorName": "ClientSideStatementNoParamExecutor",
	  "resultType": "RESULT_SET",
	  "regex": "(?is)\\A\\s*show\\s+variable\\s+read_timestamp\\s*\\z",
	  "method": "statementShowReadTimestamp",
	  "exampleStatements": ["show variable read_timestamp"],
	  "examplePrerequisiteStatements": ["set readonly = true", "SELECT 1 AS TEST"]
	},
	{
	  "name": "SHOW VARIABLE COMMIT_TIMESTAMP",
	  "executorName": "ClientSideStatementNoParamExecutor",
	  "resultType": "RESULT_SET",
	  "regex": "(?is)\\A\\s*show\\s+variable\\s+commit_timestamp\\s*\\z",
	  "method": "statementShowCommitTimestamp",
	  "exampleStatements": ["show variable commit_timestamp"],
	  "examplePrerequisiteStatements": ["update foo set bar=1"]
	},
	{
	  "name": "SHOW VARIABLE READ_ONLY_STALENESS",
	  "executorName": "ClientSideStatementNoParamExecutor",
	  "resultType": "RESULT_SET",
	  "regex": "(?is)\\A\\s*show\\s+variable\\s+read_only_staleness\\s*\\z",
	  "method": "statementShowReadOnlyStaleness",
	  "exampleStatements": ["show variable read_only_staleness"]
	},
	{
	  "name": "BEGIN TRANSACTION",
	  "executorName": "ClientSideStatementNoParamExecutor",
	  "resultType": "NO_RESULT",
	  "regex": "(?is)\\A\\s*(?:begin|start)(?:\\s+transaction)?\\s*\\z",
	  "method": "statementBeginTransaction",
	  "exampleStatements": ["begin", "start", "begin transaction", "start transaction"]
	},
	{
	  "name": "COMMIT TRANSACTION",
	  "executorName": "ClientSideStatementNoParamExecutor",
	  "resultType": "NO_RESULT",
	  "regex": "(?is)\\A\\s*(?:commit)(?:\\s+transaction)?\\s*\\z",
	  "method": "statementCommit",
	  "exampleStatements": ["commit", "commit transaction"],
	  "examplePrerequisiteStatements": ["begin transaction"]
	},
	{
	  "name": "ROLLBACK TRANSACTION",
	  "executorName": "ClientSideStatementNoParamExecutor",
	  "resultType": "NO_RESULT",
	  "regex": "(?is)\\A\\s*(?:rollback)(?:\\s+transaction)?\\s*\\z",
	  "method": "statementRollback",
	  "exampleStatements": ["rollback", "rollback transaction"],
	  "examplePrerequisiteStatements": ["begin transaction"]
	},
	{
	  "name": "START BATCH DDL",
	  "executorName": "ClientSideStatementNoParamExecutor",
	  "resultType": "NO_RESULT",
	  "regex": "(?is)\\A\\s*(?:start)(?:\\s+batch)(?:\\s+ddl)\\s*\\z",
	  "method": "statementStartBatchDdl",
	  "exampleStatements": ["start batch ddl"]
	},
	{
	  "name": "START BATCH DML",
	  "executorName": "ClientSideStatementNoParamExecutor",
	  "resultType": "NO_RESULT",
	  "regex": "(?is)\\A\\s*(?:start)(?:\\s+batch)(?:\\s+dml)\\s*\\z",
	  "method": "statementStartBatchDml",
	  "exampleStatements": ["start batch dml"]
	},
	{
	  "name": "RUN BATCH",
	  "executorName": "ClientSideStatementNoParamExecutor",
	  "resultType": "NO_RESULT",
	  "regex": "(?is)\\A\\s*(?:run)(?:\\s+batch)\\s*\\z",
	  "method": "statementRunBatch",
	  "exampleStatements": ["run batch"],
	  "examplePrerequisiteStatements": ["start batch ddl"]
	},
	{
	  "name": "ABORT BATCH",
	  "executorName": "ClientSideStatementNoParamExecutor",
	  "resultType": "NO_RESULT",
	  "regex": "(?is)\\A\\s*(?:abort)(?:\\s+batch)\\s*\\z",
	  "method": "statementAbortBatch",
	  "exampleStatements": ["abort batch"],
	  "examplePrerequisiteStatements": ["start batch ddl"]
	},
	{
	  "name": "SET AUTOCOMMIT = TRUE|FALSE",
	  "executorName": "ClientSideStatementSetExecutor",
	  "resultType": "NO_RESULT",
	  "regex": "(?is)\\A\\s*set\\s+autocommit\\s*(?:=)\\s*(.*)\\z",
	  "method": "statementSetAutocommit",
	  "exampleStatements": ["set autocommit = true", "set autocommit = false"],
	  "setStatement": {
	    "propertyName": "AUTOCOMMIT",
	    "separator": "=",
	    "allowedValues": "(TRUE|FALSE)",
	    "converterName": "ClientSideStatementValueConverters$BooleanConverter"
	  }
	},
	{
	  "name": "SET READONLY = TRUE|FALSE",
	  "executorName": "ClientSideStatementSetExecutor",
	  "resultType": "NO_RESULT",
	  "regex": "(?is)\\A\\s*set\\s+readonly\\s*(?:=)\\s*(.*)\\z",
	  "method": "statementSetReadOnly",
	  "exampleStatements": ["set readonly = true", "set readonly = false"],
	  "setStatement": {
	    "propertyName": "READONLY",
	    "separator": "=",
	    "allowedValues": "(TRUE|FALSE)",
	    "converterName": "ClientSideStatementValueConverters$BooleanConverter"
	  }
	},
	{
	  "name": "SET RETRY_ABORTS_INTERNALLY = TRUE|FALSE",
	  "executorName": "ClientSideStatementSetExecutor",
	  "resultType": "NO_RESULT",
	  "regex": "(?is)\\A\\s*set\\s+retry_aborts_internally\\s*(?:=)\\s*(.*)\\z",
	  "method": "statementSetRetryAbortsInternally",
	  "exampleStatements": ["set retry_aborts_internally = true", "set retry_aborts_internally = false"],
	  "examplePrerequisiteStatements": ["set readonly = false", "set autocommit = false"],
	  "setStatement": {
	    "propertyName": "RETRY_ABORTS_INTERNALLY",
	    "separator": "=",
	    "allowedValues": "(TRUE|FALSE)",
	    "converterName": "ClientSideStatementValueConverters$BooleanConverter"
	  }
	},
	{
	  "name": "SET AUTOCOMMIT_DML_MODE = 'PARTITIONED_NON_ATOMIC'|'TRANSACTIONAL'",
	  "executorName": "ClientSideStatementSetExecutor",
	  "resultType": "NO_RESULT",
	  "regex": "(?is)\\A\\s*set\\s+autocommit_dml_mode\\s*(?:=)\\s*(.*)\\z",
	  "method": "statementSetAutocommitDmlMode",
	  "exampleStatements": ["set autocommit_dml_mode='PARTITIONED_NON_ATOMIC'", "set autocommit_dml_mode='TRANSACTIONAL'"],
	  "setStatement": {
	    "propertyName": "AUTOCOMMIT_DML_MODE",
	    "separator": "=",
	    "allowedValues": "'(PARTITIONED_NON_ATOMIC|TRANSACTIONAL)'",
	    "converterName": "ClientSideStatementValueConverters$AutocommitDmlModeConverter"
	  }
	},
	{
	  "name": "SET STATEMENT_TIMEOUT = '<duration>'|NULL",
	  "executorName": "ClientSideStatementSetExecutor",
	  "resultType": "NO_RESULT",
	  "regex": "(?is)\\A\\s*set\\s+statement_timeout\\s*(?:=)\\s*(.*)\\z",
	  "method": "statementSetStatementTimeout",
	  "exampleStatements": ["set statement_timeout=null", "set statement_timeout='1s'", "set statement_timeout='100ms'", "set statement_timeout='10000us'", "set statement_timeout='9223372036854775807ns'"],
	  "setStatement": {
	    "propertyName": "STATEMENT_TIMEOUT",
	    "separator": "=",
	    "allowedValues": "('(\\d{1,19})(s|ms|us|ns)'|NULL)",
	    "converterName": "ClientSideStatementValueConverters$DurationConverter"
	  }
	},
	{
	  "name": "SET TRANSACTION READ ONLY|READ WRITE",
	  "executorName": "ClientSideStatementSetExecutor",
	  "resultType": "NO_RESULT",
	  "regex": "(?is)\\A\\s*set\\s+transaction\\s*(?:\\s+)\\s*(.*)\\z",
	  "method": "statementSetTransactionMode",
	  "exampleStatements": ["set transaction read only", "set transaction read write"],
	  "examplePrerequisiteStatements": ["set autocommit = false"],
	  "setStatement": {
	    "propertyName": "TRANSACTION",
	    "separator": "\\s+",
	    "allowedValues": "(READ\\s+ONLY|READ\\s+WRITE)",
	    "converterName": "ClientSideStatementValueConverters$TransactionModeConverter"
	  }
	},
	{
	  "name": "SET READ_ONLY_STALENESS = 'STRONG' | 'MIN_READ_TIMESTAMP <timestamp>' | 'READ_TIMESTAMP <timestamp>' | 'MAX_STALENESS <int64>s|ms|us|ns' | 'EXACT_STALENESS (<int64>s|ms|us|ns)'",
	  "executorName": "ClientSideStatementSetExecutor",
	  "resultType": "NO_RESULT",
	  "regex": "(?is)\\A\\s*set\\s+read_only_staleness\\s*(?:=)\\s*(.*)\\z",
	  "method": "statementSetReadOnlyStaleness",
	  "exampleStatements": ["set read_only_staleness='STRONG'",
	              "set read_only_staleness='MIN_READ_TIMESTAMP 2018-01-02T03:04:05.123-08:00'",
	              "set read_only_staleness='MIN_READ_TIMESTAMP 2018-01-02T03:04:05.123Z'",
	              "set read_only_staleness='MIN_READ_TIMESTAMP 2018-01-02T03:04:05.123+07:45'",
	              "set read_only_staleness='READ_TIMESTAMP 2018-01-02T03:04:05.54321-07:00'",
	              "set read_only_staleness='READ_TIMESTAMP 2018-01-02T03:04:05.54321Z'",
	              "set read_only_staleness='READ_TIMESTAMP 2018-01-02T03:04:05.54321+05:30'",
	              "set read_only_staleness='MAX_STALENESS 12s'",
	              "set read_only_staleness='MAX_STALENESS 100ms'",
	              "set read_only_staleness='MAX_STALENESS 99999us'",
	              "set read_only_staleness='MAX_STALENESS 10ns'",
	              "set read_only_staleness='EXACT_STALENESS 15s'",
	              "set read_only_staleness='EXACT_STALENESS 1500ms'",
	              "set read_only_staleness='EXACT_STALENESS 15000000us'",
	              "set read_only_staleness='EXACT_STALENESS 9999ns'"],
	  "setStatement": {
	    "propertyName": "READ_ONLY_STALENESS",
	    "separator": "=",
	    "allowedValues": "'((STRONG)|(MIN_READ_TIMESTAMP)[\\t ]+((\\d{4})-(\\d{2})-(\\d{2})([Tt](\\d{2}):(\\d{2}):(\\d{2})(\\.\\d{1,9})?)([Zz]|([+-])(\\d{2}):(\\d{2})))|(READ_TIMESTAMP)[\\t ]+((\\d{4})-(\\d{2})-(\\d{2})([Tt](\\d{2}):(\\d{2}):(\\d{2})(\\.\\d{1,9})?)([Zz]|([+-])(\\d{2}):(\\d{2})))|(MAX_STALENESS)[\\t ]+((\\d{1,19})(s|ms|us|ns))|(EXACT_STALENESS)[\\t ]+((\\d{1,19})(s|ms|us|ns)))'",
	    "converterName": "ClientSideStatementValueConverters$ReadOnlyStalenessConverter"
	  }
	}
	]
}