
# This application uses a Spanner GoogleSQL database.

spanner.project=my-project
spanner.instance=my-instance
spanner.database=spring-data-jdbc

# Sets the isolation level that will be used by default for read/write transactions.
# Spanner supports the isolation levels SERIALIZABLE and REPEATABLE READ.
spanner.default_isolation_level=REPEATABLE_READ

# The sample by default uses the Spanner emulator.
# Disable this flag to run the sample on a real Spanner instance.
spanner.emulator=true

# The sample by default starts an emulator instance in Docker.
# Disable this flag to run the sample on an Emulator instance that
# you start manually, for example if you don't have Docker installed
# on your local machine. Keep the 'spanner.emulator=true' line above
# to connect to the emulator that you have started.
spanner.auto_start_emulator=true

# Setting this property to true instructs the Spanner JDBC driver to include the SQL statement that
# is executed in the trace. This makes it easier to identify slow queries in your application.
spanner.enable_extended_tracing=true

spring.datasource.url=jdbc:cloudspanner:${spanner.endpoint}/projects/${spanner.project}/instances/${spanner.instance}/databases/${spanner.database};default_isolation_level=${spanner.default_isolation_level};autoConfigEmulator=${spanner.emulator};enableExtendedTracing=${spanner.enable_extended_tracing};${spanner.additional_properties}
spring.datasource.driver-class-name=com.google.cloud.spanner.jdbc.JdbcDriver

# Enable/disable OpenTelemetry tracing and export these to Google Cloud Trace.
open_telemetry.enabled=true
open_telemetry.project=${spanner.project}

# Used for testing
spanner.endpoint=
spanner.additional_properties=
